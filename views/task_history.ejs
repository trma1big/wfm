<%- include('partials/header') %>    
<form id="filter_form" class="was-validated" validate>         
   
    
     <div class="row">
        <div class="col">
            <label for="wsname">Workflow</label>
            <select class="form-control" name="wsname" id="wsname" >
                
                <% if (typeof wsname != 'undefined') { %>
                    <option value="<%= wsname %>"><%= wsname %></option>
                <% } else { %>
                    <option value="none">-----------------</option>
                <% } %>
            </select>            
        </div>
        <div class="col">
            <label for="taskname">Task</label>
            <select disabled class="form-control" name="taskname" id="taskname">
                <% if (typeof taskname != 'undefined') { %>
                    <option value="<%= taskname%>"><%= taskname%></option>
                <% } %>
            </select>                        
        </div>
        <div class="col">
            <label for="startDate">From</label>
            <input id="startDate" class="form-control" type="date" value="<%= moment().subtract(1,'months').format('YYYY-MM-DD') %>"/>
        </div>
        <div class="col">
            <label for="startDate">To</label>
            <input id="endDate" class="form-control" type="date" value="<%= moment().format('YYYY-MM-DD') %>"/>
        </div>
        <div class="col">
            <label for="taskname">Graph Type</label>
            <select class="form-control" name="graph_type" id="graph_type">
                    <option value="table" selected>table</option>
                    <option value="line">line</option>
                    <option value="bar">bar</option>
                    <option value="radar">radar</option>
                    <option value="polarArea">polarArea</option>
            </select>
        </div>
        <div class="col"><button type="submit" class="btn btn-lg btn-lg btn-outline-success">APPLY</button></div>
     </div>               
</form>

<div id='divTable'>

        <div class="table-responsive-xl" >
            <table id="dthist" class="table table-striped table-bordered" style="width:100%">
            <thead class="table-dark">
                    <tr>     
                    <th scope="col">workflow</th>
                    <th scope="col">task</th>
                    <th scope="col">Start date</th>
                    <th scope="col">end date</th>
                    <th scope="col">Duration ( Min )</th>
                    </tr>
                </thead>
            </table>
        </div>

</div>


<div id="divchart">
    <canvas id="myChart" width="1200" height="600" style=" height: 600px; width: 1200px;"></canvas>
    <button class="btn btn-lg btn-lg btn-outline-success" onclick="download_pdf_from_image()">Download</button>

</div>
 
<%- include('partials/footer') %>
<%- include('partials/rows_manager') %>
<script src="/datatables.net/js/jquery.dataTables.min.js" crossorigin="anonymous"></script> 
<script src="/datatables.net-bs5/js/dataTables.bootstrap5.min.js" crossorigin="anonymous"></script> 
<link rel="stylesheet" href="/datatables.net-bs5/css/dataTables.bootstrap5.min.css" crossorigin="anonymous">
<script src="/datatables.net-buttons/js/dataTables.buttons.min.js" crossorigin="anonymous"></script>
<script src="/datatables.net-buttons/js/buttons.html5.min.js" crossorigin="anonymous"></script>
<script src="/datatables.net-buttons/js/buttons.print.min.js" crossorigin="anonymous"></script>
<script src="/pdfmake/build/pdfmake.min.js" crossorigin="anonymous"></script>
<script src="/pdfmake/build/vfs_fonts.js" crossorigin="anonymous"></script>
<script src="/chart.js/dist/chart.js"></script>
<script src="/jspdf/dist/jspdf.umd.min.js"></script>
<script src="/html2canvas/dist/html2canvas.min.js"></script>



<script>
    <% if (typeof wsname != 'undefined') { %>
        var wsname = <%- JSON.stringify(wsname) %>;
    <% } %>
</script>

<script>
    <% if (typeof taskname != 'undefined') { %>
        var taskname = <%- JSON.stringify(taskname) %>;
        <% } %>  
</script>


<script>    

   document.getElementById("wsname").onchange = function(){Enable_taskname_list($("#wsname").val(),taskname)};

    $("#filter_form").submit(function(e) {
        wsname = $("#wsname").val();
        if (wsname !== "none") {
            taskname = $("#taskname").val();

            var checkedValue = $("#graph_type").val();       
            if (checkedValue === "table") {
                $('#divTable').show();
                $('#divchart').hide();
                
                dt_master.ajax.url( "/tasks/gethist/" + wsname + "/" + taskname + "/" + encodeURIComponent(formatDate(new Date($("#startDate").val()))) + "/" + encodeURIComponent(formatDate(new Date($("#endDate").val()))) );
                dt_master.ajax.reload();
            } else {            
                $('#divTable').hide();
                $('#divchart').show();
                $.get("/tasks/gethist/" + wsname + "/" + taskname + "/" + encodeURIComponent(formatDate(new Date($("#startDate").val()))) + "/" + encodeURIComponent(formatDate(new Date($("#endDate").val()))), function(data, status){
                    var js = JSON.parse(data);
                    const labels = [];
                    const values = [];
                    js.forEach(function(item, index, object) {              
                        labels.push(item.start_date)
                        values.push(item.duration)   
                    });     
                    const bgColor = {
                        id: 'bgColor',
                        beforeDraw: (chart, options) => {
                            const {ctx, width, height } = chart;
                            ctx.fillStyle = 'white';
                            ctx.fillRect(0,0,width, height)
                            ctx.restore();
                        }
                    }       
                    const chart_data = {
                        labels: labels,
                        datasets: [{
                        label: 'Execution miutes',
                        fill: true,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        // borderColor: 'rgb(54, 162, 235)',
                        borderColor: 'rgb(54, 162, 235)',
                        pointBackgroundColor: 'rgb(54, 162, 235)',
                        pointBorderColor: '#000',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgb(54, 162, 235)',
                        data: values,
                        }]
                    };

                    const config = {
                        type: checkedValue,                    
                        data: chart_data,
                        options: {responsive : false,
                        scales: { y: { beginAtZero : true}}},
                        plugins: [bgColor]
                    };
                    let chartStatus = Chart.getChart("myChart");
                    if (chartStatus != undefined) {
                    chartStatus.destroy();
                    }

                    const myChart = new Chart(
                        document.getElementById('myChart'),
                        config
                    );
                });      
            }
        }

        e.preventDefault();
    });
    
    
    function padTo2Digits(num) {
        return num.toString().padStart(2, '0');
    }

    function formatDate(date) {
        return [
            padTo2Digits(date.getDate()),
            padTo2Digits(date.getMonth() + 1),
            date.getFullYear(),
        ].join('/');
    }

    function download_pdf_from_image() {
        const canvas = document.getElementById('myChart');
        const canvasImage = canvas.toDataURL('image/jpeg',1.0);
        window.jsPDF = window.jspdf.jsPDF
        let pdf = new jsPDF("landscape");

        pdf.setFontSize(20);
        pdf.addImage(canvasImage,'JPEG', 15, 15, 280, 150);
        
        pdf.text(15,15,"Workflow: " + wsname + " Task: " + taskname)
        pdf.save('statistics.pdf');
        
    }

    $(document).ready(function () {
        Enable_wf_list(wsname);
        $('#divchart').hide();        
        dt_master = $('#dthist').DataTable(            
            {
            "ajax": {
                "url": "/tasks/gethist/" + wsname + "/" + taskname + "/" + encodeURIComponent(formatDate(new Date($("#startDate").val()))) + "/" + encodeURIComponent(formatDate(new Date($("#endDate").val()))),
                "dataSrc": function ( json ) {
                    for ( var i=0, ien=json.length ; i<ien ; i++ ) {
                        var element = {}
                        element.id = i;
                        json[i].id = i; 
                        json[i].duration = json[i].duration
                    }
                    return json;
                }
            },     
            dom: '<"top"Bi>rt<"bottom"flp><"clear">'   ,            
            buttons: [{ extend: 'pdf', className: 'btn btn-outline-success', title: 'statistics'}, { extend: 'copy', className: 'btn btn-outline-success'}],
            "columns": [       
                { "data": "wsname" }, 
                { "data": "taskname" },                
                { "data": "start_date" },         
                { "data": "end_date" },
                { "data": "duration" }                
            ],
                responsive: true
            });        
    });
    </script>
