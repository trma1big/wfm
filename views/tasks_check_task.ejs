<%- include('partials/header') %>    

<!-- <a class="btn btn-lg btn-lg" href="/tasks" role="button">Back &raquo;</a>      -->
                    
<link rel="stylesheet" href="/bpmn-js/dist/assets/bpmn-js.css">
<link rel="stylesheet" href="/bpmn-js/dist/assets/diagram-js.css">
<link rel="stylesheet" href="/bpmn-js/dist/assets/bpmn-font/css/bpmn.css">
<script src="/bpmn-js/dist/bpmn-modeler.production.min.js"></script>

<style>
  html, body, #canvas {
    height: 100%;
    padding: 0;
    margin: 0;
  }

  .diagram-note {
    background-color: rgba(66, 180, 21, 0.7);
    color: White;
    border-radius: 5px;
    font-family: Arial;
    font-size: 12px;
    padding: 5px;
    min-height: 16px;
    width: 50px;
    text-align: center;
  }

  .djs-palette {
    position: absolute;
    left: 1100px;
    top: 1px;
    box-sizing: border-box;
  }
  .needs-discussion:not(.djs-connection) .djs-visual > :nth-child(1) {
    stroke: rgba(66, 180, 21, 0.7) !important; /* color elements as red */
  }
</style>
<div id="myAlert" class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none;">
  <strong>WFM</strong> the BPMn diagram have to contains a name for the task and a "Text Annotation" that will be used as Description
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
  </button>
</div>   
<div id="canvas" class="mw-100" style="height: 400px"></div>
<form id="save_task" method="POST" action="/tasks/save_tasks_final" class="was-validated">   
  <input type="text" hidden name="file" value="<%= filename %>">
  <input type="text" id="xml_content" name="xml_content" value="" hidden>
  <input type="text" id="modify" name="modify" value="1" hidden>
  <div id="newRow"></div>
  <div id="inputFormRow">
  <div class="input-group mb-3">
  </div></div>
  <div class="row">
    <div class="col">
        <div id="idupload" class="form-group">     
          <a class="btn btn-lg btn-lg btn-outline-primary" class="readjobs" id="readjobs" role="button">Create task conf</a>           
          <a class="btn btn-lg btn-lg btn-outline-primary" href="/" role="button">EXIT </a>           
          <button id="salva" type="submit" class="btn btn-lg btn-lg btn-outline-success" disabled>SAVE</button>                   
        </div>                    
    </div>
</div>
</form>

       

              
<%- include('partials/footer') %>



<!-- <% if (typeof postDetail != 'undefined') {var row = JSON.stringify(postDetail)} else { var postDetail =""}%> -->

<script>
     var filename =  <%- JSON.stringify(filename) %>;    
</script>

<script>
   $('#myAlert').show();
  if (filename !== "" ) {
    postDetail = filename;
    var doimport = true;
  }
  
  var diagramUrl = postDetail;

var bpmnViewer = new BpmnJS({
  container: '#canvas'
});

$( "#readjobs" ).click(function() {
  event.preventDefault(); 
    $( "#salva" ).removeAttr('disabled');
  read_activity();
        
});


$( "#salva" ).click(function() {
  event.preventDefault();
  file = filename.split("/");  
  $.ajax({
    url: "/tasks/delete/" + file[2].replace(".bpmn", ""),
    type: 'DELETE',
    success: function(result) {        
      $('#save_task').trigger('submit');  
    }
  });
});

async function get_xml () {
  try {
      const result = await bpmnViewer.saveXML({ format: true });
      const { xml } = result;
      $('#xml_content').val(xml);
    } catch (err) {
      console.log(err);
    }
}

function read_activity () {
    $('#newRow').empty();
    get_xml();
    var canvas = bpmnViewer.get('canvas');
    // var overlays = bpmnViewer.get('overlays');
    // canvas.zoom('fit-viewport');
    var elementRegistry = canvas._elementRegistry;
    elementRegistry.forEach(function(elem, gfx) {            
      if (elem.businessObject.$instanceOf('bpmn:Task')){   
        elem.outgoing.forEach(function(annot, gfx) {                    
          if (annot.businessObject.targetRef.$instanceOf('bpmn:TextAnnotation')){            
            note = annot.businessObject.targetRef.text;
          }
        });
        const val = elem.businessObject.name;
        var html = '';
            html += '<div id="inputFormRow">';
            html += '<div class="input-group mb-3">';
            html += '<input type="text" name="ids[]" class="form-control m-input" placeholder="" value="' + elem.businessObject.id +'" readonly>';
            html += '<input type="text" name="jobs[]" class="form-control m-input" placeholder="" value="' + val +'" readonly>';
            html += '<input type="text" name="jobs_desc[]" class="form-control m-input" placeholder="" value="' + note +'" readonly>';
            html += '<div class="input-group-append">';
            html += '</div>';
            html += '</div>';

            $('#newRow').append(html);
          
         
      }
    });
}
function hide_toobar_elements (){
    $(".bpmn-icon-intermediate-event-none").hide();  
      $(".bpmn-icon-gateway-none").hide();
      $(".bpmn-icon-subprocess-expanded").hide();
      $(".bpmn-icon-subprocess-expanded").hide();
      $(".bpmn-icon-data-store").hide();
      $(".bpmn-icon-participant").hide();
      $(".bpmn-icon-data-object").hide();
      $(".bpmn-icon-group").hide();
      $(".bpmn-icon-gateway-none").hide();  
  }

async function openDiagram(bpmnXML) {
  try {
    await bpmnViewer.importXML(bpmnXML);
    hide_toobar_elements();
    var canvas = bpmnViewer.get('canvas');
    canvas.zoom('fit-viewport');
  } catch (err) {
    console.error('could not import BPMN 2.0 diagram', err);
    alert('could not import BPMN 2.0 diagram', err);
  }

}


$.get(diagramUrl, openDiagram, 'text');
</script>
