<%- include('partials/header') %>    

  <% if (typeof exists != 'undefined') { if(exists == "1") {      %>                                                         
    <div id="myDelAlert" class="alert alert-warning alert-dismissible fade show" role="alert" >
      <strong>WFM</strong> File BPMn already  
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
      </button>
    </div>
  <% }} %>

<script src="/filepond/dist/filepond.js"></script>
<link href="/filepond/dist/filepond.css" rel="stylesheet" />
<script src="/filepond-plugin-file-rename/dist/filepond-plugin-file-rename.js"></script>

<div class="bg-light border rounded-3 p-3" style="width: 75rem;">
<form id="upload" method="POST" action="/tasks/save_and_check_tasks" class="was-validated"  validate>
  <div class="row">    
      <div class="col">
          <div class="form-group">
              <label class="form-label" for="filetoupload"><span class="badge bg-secondary">BPMn upload</span></label>
              <input type="file" class="form-control-file"  required />       
              <!-- <button class="btn btn-outline-secondary btn-sm" onclick="document.getElementById('filetoupload').click()">choose a file</button> -->
          </div>                    
      </div>
  </div>
  <div class="row">
    <div class="col">
        <div id="idupload" class="form-group">     
          <a class="btn btn-lg btn-lg btn-outline-primary" href="/" role="button">EXIT </a> 
          <button type="submit" class="btn btn-lg btn-lg btn-outline-success">CHECK FILE</button>                   
        </div>                    
    </div>
</div>
</form>
</div>
<script>
  // Get a reference to the file input element
  const inputElement = document.querySelector('input[type="file"]');
  FilePond.registerPlugin(FilePondPluginFileRename);
  // Create a FilePond instance
  const pond = FilePond.create(inputElement);
//   FilePond.setOptions({
//     fileRenameFunction: (file) =>
//         new Promise((resolve) => {
//             resolve(window.prompt('Enter new filename', file.name));
//         }),
// });
FilePond.setOptions({
    fileRenameFunction: (file) =>
        new Promise((resolve) => {
            resolve(window.prompt('Enter new filename', file.name));
        }),                    
    server: {
        
        process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {
            // fieldName is the name of the input field
            // file is the actual file object to send
            const formData = new FormData();
            formData.append(fieldName, file, file.name);

            const request = new XMLHttpRequest();
            request.open('POST', '/tasks/upload');

            // Should call the progress method to update the progress to 100% before calling load
            // Setting computable to false switches the loading indicator to infinite mode
            request.upload.onprogress = (e) => {
                progress(e.lengthComputable, e.loaded, e.total);
            };

            // Should call the load method when done and pass the returned server file id
            // this server file id is then used later on when reverting or restoring a file
            // so your server knows which file to return without exposing that info to the client
            request.onload = function () {
                if (request.status >= 200 && request.status < 300) {
                    // the load method accepts either a string (id) or an object
                    // alert(request.responseText);
                    load(request.responseText);                    

                } else {
                    // Can call the error method if something is wrong, should exit after
                    error('oh no');
                }
            };

            request.send(formData);
            return {
                abort: () => {

                    request.abort();
                    abort();
                },
            };
        },
    },
});



</script>




              
<%- include('partials/footer') %>



<!-- <% if (typeof postDetail != 'undefined') {var row = JSON.stringify(postDetail)} else { var postDetail =""}%> -->

<script>
    // var rows = <%- JSON.stringify(postDetail) %>;    
</script>

<script>
  // if (rows !== "" ) {
    // postDetail = rows;
    // var doimport = true;
  // }
  


// $("#filetoupload").on('change',function(){       
//         $("#idupload").append('<button class="btn btn-outline-dark"><span class="spinner-grow spinner-grow-sm"></span>Click here to Load</button>');
//     });
</script>
